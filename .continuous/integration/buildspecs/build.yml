version: 0.2

#env:

  #variables:
    #ECR_REPOSITORY_NAME: "smart2"

  #parameter-store:
     # key: "value"
     # key: "value"


phases:

  install:
    commands:
      - printenv
      - echo "========================================="
      - pwd
      - ls -alt
    #finally:
      # - command
      # - command

  pre_build:
    commands:
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}

      - echo "Logging in to Amazon ECR..."
      - $(aws ecr get-login --region ${AWS_DEFAULT_REGION} --no-include-email)

      - echo "docker version is..."
      - docker version

      - echo "get prev image..."
      - docker pull ${REPOSITORY_URI}:${HEAD_REV} || docker pull ${REPOSITORY_URI}:${HEAD_BEFORE_REV} || docker pull ${REPOSITORY_URI}:master || true
      - CACHE_IMAGE_URL=$(docker images ${REPOSITORY_URI} --format "{{.Repository}}:{{.Tag}}")
      - echo "$CACHE_IMAGE_URL"

    #finally:
      # - command
      # - command

  build:
    commands:
      - echo "Building the Docker image..."
      - BUILD_COMMAND="docker build -f .continuous/integration/docker/app/Dockerfile -t ${REPOSITORY_URI}:${HEAD_REV} ."
      - |+
        if [ -n "${CACHE_IMAGE_URL}" ]; then
          echo "build wich cache"
          eval "${BUILD_COMMAND} --cache-from ${CACHE_IMAGE_URL}"
        else
          echo "build no cache"
          eval "${BUILD_COMMAND}"
        fi
    #finally:
      # - command
      # - command

  post_build:
    commands:
      - echo "Pushing the Docker image..."
      - docker push ${REPOSITORY_URI}:${HEAD_REV}

    #finally:
      # - command
      # - command

#artifacts:
  #files:
    # - location
    # - location
    # - name
  #discard-paths: yes
  #base-directory: location
#cache:
  #paths:
    # - path
    # - path
